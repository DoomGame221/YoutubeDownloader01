name: Release

on:
  workflow_dispatch:

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  get-version:
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.version.outputs.new_version }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Calculate next version
        id: version
        run: |
          # หา tag ล่าสุด
          latest_tag=$(git tag --list 'v*' | sort -V | tail -n 1)
          
          if [ -z "$latest_tag" ]; then
            # ถ้าไม่มี tag เลย เริ่มที่ v1.0.0
            new_version="v1.0.0"
          else
            # ดึงตัวเลขจาก tag ล่าสุดและเพิ่ม 0.0.1
            version_number=${latest_tag#v}
            IFS='.' read -r major minor patch <<< "$version_number"
            new_patch=$((patch + 1))
            new_version="v$major.$minor.$new_patch"
          fi
          
          echo "new_version=$new_version" >> $GITHUB_OUTPUT
          
      - name: Create new tag
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag ${{ steps.version.outputs.new_version }}
          git push origin ${{ steps.version.outputs.new_version }}

  format:
    needs: get-version
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
      - name: Install .NET
        uses: actions/setup-dotnet@3951f0dfe7a07e2313ec93c75700083e2005cbab
        with:
          dotnet-version: 9.0.x
      - name: Verify formatting
        run: >
          dotnet build
          -t:CSharpierFormat
          --configuration Release

  pack:
    needs: get-version
    strategy:
      matrix:
        rid:
          - win-arm64
          - win-x86
          - win-x64
          - linux-arm64
          - linux-x64
          - osx-arm64
          - osx-x64
        bundle-ffmpeg:
          - true
          - false
        include:
          - bundle-ffmpeg: true
            artifact-name-base: YoutubeDownloader
          - bundle-ffmpeg: false
            artifact-name-base: YoutubeDownloader.Bare
        exclude:
          - bundle-ffmpeg: true
            rid: linux-arm64
    runs-on: ${{ startsWith(matrix.rid, 'win-') && 'windows-latest' || startsWith(matrix.rid, 'osx-') && 'macos-latest' || 'ubuntu-latest' }}
    timeout-minutes: 10
    permissions:
      actions: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
      - name: Install .NET
        uses: actions/setup-dotnet@3951f0dfe7a07e2313ec93c75700083e2005cbab
        with:
          dotnet-version: 9.0.x
      - name: Download FFmpeg
        if: ${{ matrix.bundle-ffmpeg }}
        shell: pwsh
        run: YoutubeDownloader/DownloadFFmpeg.ps1 -platform ${{ matrix.rid }}
      - name: Publish app
        run: >
          dotnet publish YoutubeDownloader
          -p:Version=${{ needs.get-version.outputs.new_version }}
          -p:CSharpier_Bypass=true
          --output YoutubeDownloader/bin/publish
          --configuration Release
          --runtime ${{ matrix.rid }}
          --self-contained
      - name: Upload artifacts
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08
        with:
          name: ${{ matrix.artifact-name-base }}.${{ matrix.rid }}
          path: YoutubeDownloader/bin/publish
          if-no-files-found: error

  release:
    needs: [format, pack]
    if: ${{ always() }}
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create ${{ needs.get-version.outputs.new_version }}
          --repo ${{ github.event.repository.full_name }}
          --title ${{ needs.get-version.outputs.new_version }}
          --generate-notes
          --verify-tag

  deploy:
    needs: [format, pack, release]
    strategy:
      matrix:
        rid:
          - win-arm64
          - win-x86
          - win-x64
          - linux-arm64
          - linux-x64
          - osx-arm64
          - osx-x64
        bundle-ffmpeg:
          - true
          - false
        include:
          - bundle-ffmpeg: true
            artifact-name-base: YoutubeDownloader
          - bundle-ffmpeg: false
            artifact-name-base: YoutubeDownloader.Bare
        exclude:
          - bundle-ffmpeg: true
            rid: linux-arm64
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      actions: read
      contents: write
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16
        with:
          name: ${{ matrix.artifact-name-base }}.${{ matrix.rid }}
          path: YoutubeDownloader/
      - name: Set permissions (app)
        if: ${{ !startsWith(matrix.rid, 'win-') }}
        run: chmod +x YoutubeDownloader/YoutubeDownloader
      - name: Set permissions (FFmpeg)
        if: ${{ !startsWith(matrix.rid, 'win-') && matrix.bundle-ffmpeg }}
        run: chmod +x YoutubeDownloader/ffmpeg
      - name: Create package
        working-directory: YoutubeDownloader/
        run: zip -r ../${{ matrix.artifact-name-base }}.${{ matrix.rid }}.zip .
      - name: Upload release asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload ${{ needs.get-version.outputs.new_version }}
          ${{ matrix.artifact-name-base }}.${{ matrix.rid }}.zip
          --repo ${{ github.event.repository.full_name }}

  notify:
    needs: deploy
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: read
    steps:
      - name: Notify Discord
        uses: tyrrrz/action-http-request@1dd7ad841a34b9299f3741f7c7399f9feefdfb08
        with:
          url: ${{ secrets.DISCORD_WEBHOOK }}
          method: POST
          headers: |
            Content-Type: application/json; charset=UTF-8
          body: |
            {
              "avatar_url": "https://raw.githubusercontent.com/${{ github.event.repository.full_name }}/${{ needs.get-version.outputs.new_version }}/favicon.png",
              "content": "[**${{ github.event.repository.name }}**](<${{ github.event.repository.html_url }}>) ${{ needs.get-version.outputs.new_version }} has been released!"
            }
          retry-count: 5