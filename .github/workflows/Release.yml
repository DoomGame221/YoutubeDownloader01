name: Release

on:
  workflow_dispatch:

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  format:
    # ‡∏Ñ‡∏á‡πÄ‡∏î‡∏¥‡∏° ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
      - name: Install .NET
        uses: actions/setup-dotnet@v4.3.0
        with:
          dotnet-version: 9.0.x
      - name: Build
        run: >
          dotnet build
          -p:CSharpier_Bypass=true
          --configuration Release
      - name: Verify formatting
        id: verify
        run: >
          dotnet build
          -t:CSharpierFormat
          --configuration Release
          --no-restore
      - name: Report issues
        if: ${{ failure() && steps.verify.outcome == 'failure' }}
        run: echo "::error title=Bad formatting::Formatting issues detected. Please build the solution locally to fix them."

  pack:
    # ‡∏Ñ‡∏á‡πÄ‡∏î‡∏¥‡∏° ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
    # ... (‡∏™‡πà‡∏ß‡∏ô matrix ‡πÅ‡∏•‡∏∞ steps ‡πÄ‡∏î‡∏¥‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î)

  deploy:
    needs: pack
    strategy:
      # ... (matrix ‡πÄ‡∏î‡∏¥‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î)
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      actions: read
      contents: write

    steps:
      - name: Checkout repository with full history
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0  # ‡∏î‡∏∂‡∏á history ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì version

      - name: Calculate version
        id: version
        run: |
          LATEST_TAG=$(git tag --list 'v*' | sort -V | tail -n 1)
          if [ -z "$LATEST_TAG" ]; then
            NEW_VERSION="v1.0.0"
          else
            VERSION_NUM=${LATEST_TAG#v}  # ‡∏•‡∏ö 'v' ‡∏≠‡∏≠‡∏Å
            IFS='.' read -r MAJOR MINOR PATCH <<< "$VERSION_NUM"
            NEW_PATCH=$((PATCH + 1))
            NEW_VERSION="v$MAJOR.$MINOR.$NEW_PATCH"
          fi
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Create Git Tag
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git tag ${{ steps.version.outputs.NEW_VERSION }}
          git push origin ${{ steps.version.outputs.NEW_VERSION }}

      - name: Download artifacts
        uses: actions/download-artifact@v4.1.8
        with:
          name: ${{ matrix.artifact-name-base }}.${{ matrix.rid }}
          path: YoutubeDownloader/

      - name: Set permissions (app)
        if: ${{ !startsWith(matrix.rid, 'win-') }}
        run: chmod +x YoutubeDownloader/YoutubeDownloader

      - name: Set permissions (FFmpeg)
        if: ${{ !startsWith(matrix.rid, 'win-') && matrix.bundle-ffmpeg }}
        run: chmod +x YoutubeDownloader/ffmpeg

      - name: Create package
        working-directory: YoutubeDownloader/
        run: zip -r ../${{ matrix.artifact-name-base }}.${{ matrix.rid }}.zip .

      - name: Upload release asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create ${{ steps.version.outputs.NEW_VERSION }} \
            --title "Release ${{ steps.version.outputs.NEW_VERSION }}" \
            --generate-notes \
            ${{ matrix.artifact-name-base }}.${{ matrix.rid }}.zip

  notify:
    needs: deploy
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0

      - name: Get latest version
        id: version
        run: |
          LATEST_TAG=$(git tag --list 'v*' | sort -V | tail -n 1)
          echo "LATEST_VERSION=$LATEST_TAG" >> $GITHUB_OUTPUT

      - name: Notify Discord
        uses: tyrrrz/action-http-request@1.1.3
        with:
          url: ${{ secrets.DISCORD_WEBHOOK }}
          method: POST
          headers: |
            Content-Type: application/json; charset=UTF-8
          body: |
            {
              "username": "GitHub Actions",
              "avatar_url": "https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png",
              "content": "**YoutubeDownloader01 ‡∏°‡∏µ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÉ‡∏´‡∏°‡πà! üéâ**\n‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà: [‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà](https://github.com/DoomGame221/YoutubeDownloader01/releases/${{ steps.version.outputs.LATEST_VERSION }})"
            }
          retry-count: 5
