name: Release

on:
  workflow_dispatch:

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.generate_version.outputs.version }}
      tag_version: ${{ steps.generate_version.outputs.tag_version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0

      - name: Generate version
        id: generate_version
        run: |
          latest_tag=$(git tag --list 'v*' | sort -V | tail -n 1)
          
          if [ -z "$latest_tag" ]; then
            version="1.0.0"
            tag_version="v1.0.0"
          else
            version_num=${latest_tag#v}
            IFS='.' read -r major minor patch <<< "$version_num"
            new_patch=$((patch + 1))
            version="${major}.${minor}.${new_patch}"
            tag_version="v${major}.${minor}.${new_patch}"
          fi
          
          echo "Version: $version"
          echo "Tag version: $tag_version"
          echo "version=$version" >> $GITHUB_OUTPUT
          echo "tag_version=$tag_version" >> $GITHUB_OUTPUT

      - name: Create and push tag
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git tag ${{ steps.generate_version.outputs.tag_version }}
          git push origin ${{ steps.generate_version.outputs.tag_version }}

  format:
    needs: version
    runs-on: ubuntu-latest
    timeout-minutes: 15 # ‡πÄ‡∏û‡∏¥‡πà‡∏° timeout
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Install .NET
        uses: actions/setup-dotnet@v4.3.0
        with:
          dotnet-version: 9.0.x

      - name: Build
        run: |
          dotnet build -p:CSharpier_Bypass=true --configuration Release -v detailed # ‡πÄ‡∏û‡∏¥‡πà‡∏° verbosity

      - name: Verify formatting
        id: verify
        run: |
          dotnet build -t:CSharpierFormat --configuration Release --no-restore -v detailed

      - name: Report issues
        if: ${{ failure() && steps.verify.outcome == 'failure' }}
        run: echo "::error title=Bad formatting::Formatting issues detected. Please build the solution locally to fix them."

  pack:
    needs: [version, format]
    strategy:
      matrix:
        rid:
          - win-arm64
          - win-x86
          - win-x64
        bundle-ffmpeg:
          - true
          - false
        include:
          - bundle-ffmpeg: true
            artifact-name-base: YoutubeDownloader
          - bundle-ffmpeg: false
            artifact-name-base: YoutubeDownloader.Bare

    runs-on: windows-latest # ‡πÉ‡∏ä‡πâ windows-latest ‡πÄ‡∏â‡∏û‡∏≤‡∏∞ ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏ñ‡∏µ‡∏¢‡∏£‡∏Å‡∏±‡∏ö Windows RID
    timeout-minutes: 20 # ‡πÄ‡∏û‡∏¥‡πà‡∏° timeout ‡πÉ‡∏´‡πâ‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏û‡∏≠
    permissions:
      actions: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Install .NET
        uses: actions/setup-dotnet@v4.3.0
        with:
          dotnet-version: 9.0.x

      - name: Download FFmpeg
        if: ${{ matrix.bundle-ffmpeg }}
        shell: pwsh
        run: YoutubeDownloader/DownloadFFmpeg.ps1 -platform ${{ matrix.rid }}

      - name: Publish app
        run: |
          dotnet publish YoutubeDownloader `
            -p:Version=${{ needs.version.outputs.version }} `
            -p:CSharpier_Bypass=true `
            --output YoutubeDownloader/bin/publish `
            --configuration Release `
            --runtime ${{ matrix.rid }} `
            --self-contained `
            -v detailed # ‡πÄ‡∏û‡∏¥‡πà‡∏° verbosity ‡πÄ‡∏û‡∏∑‡πà‡∏≠ debug

      - name: Upload artifacts
        uses: actions/upload-artifact@v4.6.0
        with:
          name: ${{ matrix.artifact-name-base }}.${{ matrix.rid }}
          path: YoutubeDownloader/bin/publish
          if-no-files-found: error

  deploy:
    needs: pack
    strategy:
      matrix:
        rid:
          - win-arm64
          - win-x86
          - win-x64
        bundle-ffmpeg:
          - true
          - false
        include:
          - bundle-ffmpeg: true
            artifact-name-base: YoutubeDownloader
          - bundle-ffmpeg: false
            artifact-name-base: YoutubeDownloader.Bare

    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      actions: read
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Download artifacts
        uses: actions/download-artifact@v4.1.8
        with:
          name: ${{ matrix.artifact-name-base }}.${{ matrix.rid }}
          path: YoutubeDownloader/

      - name: Create package
        working-directory: YoutubeDownloader/
        run: zip -r ../${{ matrix.artifact-name-base }}.${{ matrix.rid }}.zip .

      - name: Upload release asset
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.version.outputs.tag_version }}
          files: ${{ matrix.artifact-name-base }}.${{ matrix.rid }}.zip
          fail_on_unmatched_files: true
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  notify:
    needs: [version, deploy]
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: read
    steps:
      - name: Notify Discord
        uses: tyrrrz/action-http-request@1.1.3
        with:
          url: ${{ secrets.DISCORD_WEBHOOK }}
          method: POST
          headers: |
            Content-Type: application/json; charset=UTF-8
          body: |
            {
              "username": "GitHub Actions",
              "avatar_url": "https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png",
              "content": "**YoutubeDownloader01 ‡∏°‡∏µ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÉ‡∏´‡∏°‡πà! üéâ**\nVersion: ${{ needs.version.outputs.tag_version }}\n‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà: <https://github.com/DoomGame221/YoutubeDownloader01/releases/${{ needs.version.outputs.tag_version }}>"
            }
          retry-count: 5
