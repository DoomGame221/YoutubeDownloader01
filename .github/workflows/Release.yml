name: AutoRelease

on:
  workflow_dispatch: # Allows manual triggering

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  create-tag:
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.generate-tag.outputs.new_tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0 # Need full history for tag checking

      - name: Get latest tag
        id: get-latest
        run: |
          latest_tag=$(git tag --list 'v*' | sort -V | tail -n 1)
          if [ -z "$latest_tag" ]; then
            echo "new_tag=v1.0.0" >> $GITHUB_OUTPUT
          else
            # Extract numbers and increment
            version=${latest_tag#v}
            IFS='.' read -r major minor patch <<< "$version"
            new_patch=$((patch + 1))
            echo "new_tag=v${major}.${minor}.${new_patch}" >> $GITHUB_OUTPUT
          fi

      - name: Create and push tag
        run: |
          git config user.name "GitHub Action"
          git config user.email "action@github.com"
          git tag ${{ steps.get-latest.outputs.new_tag }}
          git push origin ${{ steps.get-latest.outputs.new_tag }}

  build-and-release:
    needs: create-tag
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Install .NET
        uses: actions/setup-dotnet@v4.3.0
        with:
          dotnet-version: 9.0.x

      - name: Publish app
        run: |
          dotnet publish YoutubeDownloader
          -p:Version=${{ needs.create-tag.outputs.new_tag }}
          --output YoutubeDownloader/bin/publish
          --configuration Release
          --runtime linux-x64
          --self-contained

      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create ${{ needs.create-tag.outputs.new_tag }}
          --title ${{ needs.create-tag.outputs.new_tag }}
          --generate-notes
          YoutubeDownloader/bin/publish/*

  notify:
    needs: build-and-release
    runs-on: ubuntu-latest
    steps:
      - name: Notify Discord
        uses: tyrrrz/action-http-request@1.1.3
        with:
          url: ${{ secrets.DISCORD_WEBHOOK }}
          method: POST
          headers: |
            Content-Type: application/json; charset=UTF-8
          body: |
            {
              "avatar_url": "https://raw.githubusercontent.com/${{ github.repository }}/${{ needs.create-tag.outputs.new_tag }}/favicon.png",
              "content": "[**${{ github.event.repository.name }}**](<${{ github.event.repository.html_url }}>) ${{ needs.create-tag.outputs.new_tag }} has been released!"
            }
          retry-count: 5