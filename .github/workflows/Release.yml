name: Release

on:
  workflow_dispatch:

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.generate_version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0 # ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÑ‡∏î‡πâ history ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö tags

      - name: Generate version
        id: generate_version
        run: |
          # ‡∏´‡∏≤ latest tag
          latest_tag=$(git tag --list 'v*' | sort -V | tail -n 1)
          
          if [ -z "$latest_tag" ]; then
            # ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ tag ‡πÄ‡∏•‡∏¢ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏µ‡πà v1.0.0
            new_version="v1.0.0"
          else
            # ‡∏•‡∏ö v ‡∏≠‡∏≠‡∏Å‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì version ‡πÉ‡∏´‡∏°‡πà
            version_num=${latest_tag#v}
            IFS='.' read -r major minor patch <<< "$version_num"
            new_patch=$((patch + 1))
            new_version="v${major}.${minor}.${new_patch}"
          fi
          
          echo "New version: $new_version"
          echo "version=$new_version" >> $GITHUB_OUTPUT

      - name: Create and push tag
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git tag ${{ steps.generate_version.outputs.version }}
          git push origin ${{ steps.generate_version.outputs.version }}

  format:
    needs: version
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Install .NET
        uses: actions/setup-dotnet@v4.3.0
        with:
          dotnet-version: 9.0.x

      - name: Build
        run: >
          dotnet build
          -p:CSharpier_Bypass=true
          --configuration Release

      - name: Verify formatting
        id: verify
        run: >
          dotnet build
          -t:CSharpierFormat
          --configuration Release
          --no-restore

      - name: Report issues
        if: ${{ failure() && steps.verify.outcome == 'failure' }}
        run: echo "::error title=Bad formatting::Formatting issues detected. Please build the solution locally to fix them."

  pack:
    needs: [version, format]
    strategy:
      matrix:
        rid:
          - win-arm64
          - win-x86
          - win-x64
        bundle-ffmpeg:
          - true
          - false
        include:
          - bundle-ffmpeg: true
            artifact-name-base: YoutubeDownloader
          - bundle-ffmpeg: false
            artifact-name-base: YoutubeDownloader.Bare

    runs-on: ${{ startsWith(matrix.rid, 'win-') && 'windows-latest' || startsWith(matrix.rid, 'osx-') && 'macos-latest' || 'ubuntu-latest' }}
    timeout-minutes: 10
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Install .NET
        uses: actions/setup-dotnet@v4.3.0
        with:
          dotnet-version: 9.0.x

      - name: Download FFmpeg
        if: ${{ matrix.bundle-ffmpeg }}
        shell: pwsh
        run: YoutubeDownloader/DownloadFFmpeg.ps1 -platform ${{ matrix.rid }}

      - name: Publish app
        run: >
          dotnet publish YoutubeDownloader
          -p:Version=${{ needs.version.outputs.version }}
          -p:CSharpier_Bypass=true
          --output YoutubeDownloader/bin/publish
          --configuration Release
          --runtime ${{ matrix.rid }}
          --self-contained

  notify:
    needs: pack
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: read
    steps:
      - name: Notify Discord
        uses: tyrrrz/action-http-request@1.1.3
        with:
          url: ${{ secrets.DISCORD_WEBHOOK }}
          method: POST
          headers: |
            Content-Type: application/json; charset=UTF-8
          body: |
            {
              "username": "GitHub Actions",
              "avatar_url": "https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png",
              "content": "**YoutubeDownloader01 ‡∏°‡∏µ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÉ‡∏´‡∏°‡πà! üéâ**\nVersion: ${{ needs.version.outputs.version }}\n‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà: <https://github.com/${{ github.repository }}/releases/tag/${{ needs.version.outputs.version }}>"
            }
          retry-count: 5
