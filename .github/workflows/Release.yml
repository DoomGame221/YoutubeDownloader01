name: Release

on:
  workflow_dispatch:

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  format:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Install .NET
        uses: actions/setup-dotnet@v4.3.0
        with:
          dotnet-version: 9.0.x

      - name: Build
        run: >
          dotnet build
          -p:CSharpier_Bypass=true
          --configuration Release

      - name: Verify formatting
        id: verify
        run: >
          dotnet build
          -t:CSharpierFormat
          --configuration Release
          --no-restore

      - name: Report issues
        if: ${{ failure() && steps.verify.outcome == 'failure' }}
        run: echo "::error title=Bad formatting::Formatting issues detected. Please build the solution locally to fix them."

  pack:
    strategy:
      matrix:
        rid:
          - win-arm64
          - win-x86
          - win-x64
#          - linux-arm64
#          - linux-x64
#          - osx-arm64
#          - osx-x64
        bundle-ffmpeg:
          - true
          - false
        include:
          - bundle-ffmpeg: true
            artifact-name-base: YoutubeDownloader
          - bundle-ffmpeg: false
            artifact-name-base: YoutubeDownloader.Bare
        exclude:
          - bundle-ffmpeg: true
            rid: linux-arm64

    runs-on: ${{ startsWith(matrix.rid, 'win-') && 'windows-latest' || startsWith(matrix.rid, 'osx-') && 'macos-latest' || 'ubuntu-latest' }}
    timeout-minutes: 10

    permissions:
      actions: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Install .NET
        uses: actions/setup-dotnet@v4.3.0
        with:
          dotnet-version: 9.0.x

      - name: Download FFmpeg
        if: ${{ matrix.bundle-ffmpeg }}
        shell: pwsh
        run: YoutubeDownloader/DownloadFFmpeg.ps1 -platform ${{ matrix.rid }}

      - name: Publish app
        run: >
          dotnet publish YoutubeDownloader
          -p:Version=999.9.9-ci-${{ github.sha }}
          -p:CSharpier_Bypass=true
          --output YoutubeDownloader/bin/publish
          --configuration Release
          --runtime ${{ matrix.rid }}
          --self-contained

      - name: Upload artifacts
        uses: actions/upload-artifact@v4.6.0
        with:
          name: ${{ matrix.artifact-name-base }}.${{ matrix.rid }}
          path: YoutubeDownloader/bin/publish
          if-no-files-found: error

  deploy:
    needs: pack

    strategy:
      matrix:
        rid:
          - win-arm64
          - win-x86
          - win-x64
#          - linux-arm64
#          - linux-x64
#          - osx-arm64
#          - osx-x64
        bundle-ffmpeg:
          - true
          - false
        include:
          - bundle-ffmpeg: true
            artifact-name-base: YoutubeDownloader
          - bundle-ffmpeg: false
            artifact-name-base: YoutubeDownloader.Bare
        exclude:
          - bundle-ffmpeg: true
            rid: linux-arm64

    runs-on: ubuntu-latest
    timeout-minutes: 10

    permissions:
      actions: write
      contents: write  # ‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏´‡πâ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏Ç‡∏≠‡∏á Repository ‡∏î‡πâ‡∏ß‡∏¢

    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Install .NET
        uses: actions/setup-dotnet@v4.3.0
        with:
          dotnet-version: 9.0.x

      - name: Download artifacts
        uses: actions/download-artifact@v4.1.8
        with:
          name: ${{ matrix.artifact-name-base }}.${{ matrix.rid }}
          path: YoutubeDownloader/

      - name: Set permissions (app)
        if: ${{ !startsWith(matrix.rid, 'win-') }}
        run: chmod +x YoutubeDownloader/YoutubeDownloader

      - name: Set permissions (FFmpeg)
        if: ${{ !startsWith(matrix.rid, 'win-') && matrix.bundle-ffmpeg }}
        run: chmod +x YoutubeDownloader/ffmpeg

      - name: Create package
        working-directory: YoutubeDownloader/
        run: zip -r ../${{ matrix.artifact-name-base }}.${{ matrix.rid }}.zip .

      - name: Create GitHub release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: "../${{ matrix.artifact-name-base }}.${{ matrix.rid }}.zip"

      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}  # ‡πÉ‡∏ä‡πâ URL ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î Release
          asset_path: "../${{ matrix.artifact-name-base }}.${{ matrix.rid }}.zip"  # ‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î
          asset_name: "${{ matrix.artifact-name-base }}.${{ matrix.rid }}.zip"  # ‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏ô Release
          asset_content_type: application/zip

  notify:
    needs: deploy
    runs-on: ubuntu-latest
    timeout-minutes: 10

    permissions:
      contents: read

    steps:
      - name: Notify Discord
        uses: tyrrrz/action-http-request@1.1.3
        with:
          url: ${{ secrets.DISCORD_WEBHOOK }}
          method: POST
          headers: |
            Content-Type: application/json; charset=UTF-8
          body: |
            {
              "username": "GitHub Actions",
              "avatar_url": "https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png",
              "content": "**YoutubeDownloader01 ‡∏°‡∏µ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÉ‡∏´‡∏°‡πà! üéâ**\n‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà: [‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà](<https://github.com/${{ github.repository }}/releases/latest>)"
            }
          retry-count: 5
